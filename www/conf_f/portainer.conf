
upstream portainer443 {
    #ip_hash; #让相同的客户端ip请求相同的服务器
    #nginx容器所在宿主机ip:宿主机端口（映射容器的80端口）
    zone portainer443 1m;
    server 45.77.104.115:9443 weight=1 max_fails=2 fail_timeout=10;
    
    # 开启健康检查功能 需要编译安装 nginx_upstream_check_module 模块
    check interval=3000 rise=2 fall=5 timeout=2000 type=tcp;
}

#https://www.xxx.com 最终页面
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.689.im; #绑定域名
    
    index index.html index.htm index.php; #默认文件
    #网站目录，即本nginx容器中的目录（本 nginx 为转发，当http://xxx.com后不指定文件时会出现错误，所以必须要有此设置）
    root /etc/nginx/html/689.im;
    server_tokens off;  #隐藏nginx版本号
    
    access_log /var/log/nginx/689.im.443.f.access.log main;
    error_log  /var/log/nginx/689.im.443.f.error.log error;
    
    # 开启 OCSP stapling
    ssl_stapling on;
    # 验证OCSP响应是否可信
    ssl_stapling_verify on;
    # 将OCSP响应缓存到磁盘上，这样即使服务器重启，OCSP响应也不会丢失（使用 openssl ocsp 命令生成）
    #ssl_stapling_file /ssl/689.im/stapling_file.ocsp;
    # resolver: 配置 DNS 解析器，用于获取 OCSP 响应。valid: 指定 OCSP 响应缓存的有效时间。
    #resolver 8.8.8.8 8.8.4.4 valid=300s;
    # 指定解析器超时时间
    #resolver_timeout 5s;
    # 提供CA证书链，用于验证OCSP响应。如果有多个CA证书，用空格分隔
    #ssl_trusted_certificate /ssl/689.im/ca.pem;
    
    #开启 SSL
    ssl_certificate     /ssl/689.im/cert.pem;
    ssl_certificate_key /ssl/689.im/key.pem;
    
    #开启 HSTS
    add_header Strict-Transport-Security "max-age=31536000";
    
    #################################
    #################################
    #################################
    
    #https://0.0.0.0:9443 访问 portainer web页面
    #portainer代理配置 https://www.abc.com/p 和 https://www.abc.com/p/ 最后末尾带不带/都能正常访问
    location /p {
        rewrite ^/p$ https://www.689.im/portainer/ redirect;
    }
    
    location /p/ {
        rewrite ^/p/$ https://www.689.im/portainer/ redirect;
    }
    
    #portainer代理配置 https://www.abc.com/portainer/ 最后末尾/不能少
    location ~ "^/portainer(/?.*)" {
        # IP地址根据自己的改
        proxy_pass https://portainer443$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # 开启拦截 proxy_pass 页面错误，如果有错误就转到 error_page 设置的错误页面
        proxy_intercept_errors on;
        #当 upstream 中的某个服务器发生了 错误、超时、返回500状态码等异常时，转向下一台服务器
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504 http_404;
    }

}
